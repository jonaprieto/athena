\frametitle{Related Work: Apia}\framesubtitle {Proving first-order theorems written in Agda using automatic theorem provers for first-order logic}

\only<1-2>{At the moment, the communication between Agda and
the ATPs is unidirectional because the ATPs are being used as oracles \citep{Sicard2015}.}
\only<1-2>{\vfill}


\begin{tikzpicture}[scale=2]
\only<1->{ \node(agda-pragmas) at (0,0){\includegraphics{figures/agda-pragmas}}};
\only<1>{
  \node[fill=aliceblue, rectangle](atp-pragma) at (3,0){
  \scalebox{0.7}{\usebox\agdapragma}
  }};


\only<2->{ \node(eagda) at (2,0){
  \includegraphics{figures/eagda}
  \footnote{Development version of Agda in order to handle a new built-in ATP-pragma.
    \url{https://github.com/asr/eagda}}
  }};

\only<3->{ \node(apia) at (4,0){
  \includegraphics{figures/apia}
  \footnote{Haskell program for proving first-order theorems written in Agda using ATPs.
    \url{https://github.com/asr/apia}}}
  };

\only<3->{ \node(tptp) at (2,-2){\includegraphics{figures/tptp}}};

\only<3->{ \node(atp) at (4,-2){\includegraphics{figures/atp}}};

\only<2->{\draw[->,ultra thick] (agda-pragmas) to (eagda)};

\only<3->{\draw[->,ultra thick] (eagda) to (apia)};
\only<3->{\draw[->, very thick, dashed, gray] (apia) to (tptp)};
\only<3->{\draw[->, very thick, dashed, gray] (tptp) to (atp)};
\only<3->{\draw[->, very thick, dashed, gray] (atp) to (apia)};

\end{tikzpicture}

