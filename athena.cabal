name:          athena
version:       0.1
build-type:    Simple
cabal-version: >= 1.18
author:        Jonathan Prieto-Cubides with contributions by Andrés Sicard-Ramírez
license:       MIT
license-file:  LICENSE
maintainer:    Jonathan Prieto-Cubides <jprieto9@eafit.edu.co>
category:      Language
homepage:      https://github.com/jonaprieto/athena
bug-reports:   https://github.com/jonaprieto/athena/issues/
synopsis:      TSTP to Agda
tested-with:   GHC == 8.0.2
description:
  Athena is a Haskell program that translates proofs given by Metis ATP in
  TSTP format to Agda code.

extra-source-files:
  README.md

source-repository head
  type:     git
  location: git://github.com/jonaprieto/athena.git

library
  default-language: Haskell2010
  hs-source-dirs: src

  build-depends:  array >= 0.4 && < 1.0
                , base >= 4.6.0.1 && < 4.10
                , base-compat >= 0.9 && < 0.10
                , bytestring >= 0.10.0.2 && < 0.11
                , containers >= 0.5.0.0 && < 0.6
                , mtl >= 2.2.1 && < 2.3
                , text >= 0.11.0.0 && < 1.3
                , split >= 0.2.3.1 && < 0.3

  exposed-modules:
    Data.Proof
    Data.Proof.ProofTreeGen
    Data.TSTP
    Data.TSTP.AtomicWord
    Data.TSTP.BinOp
    Data.TSTP.F
    Data.TSTP.Formula
    Data.TSTP.GData
    Data.TSTP.InfixPred
    Data.TSTP.IntroType
    Data.TSTP.Parent
    Data.TSTP.Quant
    Data.TSTP.Role
    Data.TSTP.Rule
    Data.TSTP.Source
    Data.TSTP.Status
    Data.TSTP.Term
    Data.TSTP.Theory
    Data.TSTP.V

executable athena
  default-language: Haskell2010

  main-is:          Athena/Main.hs
  hs-source-dirs:   src
  include-dirs:     src/Athena

  build-depends:  array >= 0.4 && < 1.0
                , base >= 4.6.0.1 && < 4.10
                , base-compat >= 0.9 && < 0.10
                , bytestring >= 0.10.0.2 && < 0.11
                , containers >= 0.5.0.0 && < 0.6
                , filepath   >= 1.4 && < 1.5
                , mtl >= 2.2.1 && < 2.3
                , text >= 0.11.0.0 && < 1.3
                , split >= 0.2.3.1 && < 0.3

  build-tools: cpphs >= 1.20.2

  other-modules:
    Athena.Options
    Athena.Translation.Core
    Athena.Translation.Core
    Athena.Translation.Functions
    Athena.Translation.Rules
    Athena.Translation.Rules.Canonicalize
    Athena.Translation.Rules.Clausify
    Athena.Translation.Rules.Conjunct
    Athena.Translation.Rules.Negate
    Athena.Translation.Rules.Resolve
    Athena.Translation.Rules.Simplify
    Athena.Translation.Rules.Skolemize
    Athena.Translation.Rules.Specialize
    Athena.Translation.Rules.Strip
    Athena.Translation.Utils
    Athena.TSTP
    Athena.TSTP.Base
    Athena.TSTP.Lexer
    Athena.TSTP.Parser
    Athena.Utils.Monad
    Athena.Utils.PrettyPrint
    Athena.Utils.Show
    Athena.Utils.Version
    Paths_athena

  ghc-options: -w
              --  -Werror
               -- Using cpphs as the C preprocessor.
               -pgmP cpphs -optP --cpp

  if impl(ghc >= 7.6)
     ghc-options: -fwarn-alternative-layout-rule-transitional
                  -- The above option isn't documented in GHC 7.10.1.
                  -fwarn-deprecated-flags
                  -fwarn-dodgy-exports
                  -fwarn-dodgy-foreign-imports
                  -fwarn-dodgy-imports
                  -fwarn-duplicate-exports
                  -fwarn-hi-shadowing
                  -fwarn-identities
                  -fwarn-incomplete-patterns
                  -fwarn-incomplete-record-updates
                  -fwarn-incomplete-uni-patterns
                  -fwarn-missing-fields
                  -- 18 July 2014. We cannot enable this option
                  -- because we are using the Paths_apia module.
                  -- -fwarn-missing-import-lists
                  -fwarn-missing-methods
                  -fwarn-missing-signatures
                  -fwarn-monomorphism-restriction
                  -fwarn-name-shadowing
                  -fwarn-orphans
                  -fwarn-overlapping-patterns
                  -fwarn-tabs
                  -fwarn-type-defaults
                  -fwarn-unrecognised-pragmas
                  -fwarn-unused-binds
                  -fwarn-unused-do-bind
                  -fwarn-unused-imports
                  -fwarn-unused-matches
                  -fwarn-unsupported-calling-conventions
                  -fwarn-warnings-deprecations
                  -fwarn-wrong-do-bind

  if impl(ghc >= 7.8)
     ghc-options: -fwarn-empty-enumerations
                  -fwarn-inline-rule-shadowing
                  -fwarn-overflowed-literals
                  -fwarn-typed-holes
                  -fwarn-unsupported-llvm-version

  if impl(ghc >= 7.10)
     ghc-options: -fwarn-deriving-typeable
                  -fwarn-unticked-promoted-constructors

  if impl(ghc >= 8.0)
    ghc-options: -Wmissing-monadfail-instances
                 -Wmissing-pattern-synonym-signatures
                 -Wnoncanonical-monad-instances
                 -Wnoncanonical-monoid-instances
                 -Wredundant-constraints
                 -Wsemigroup
                 -Wunrecognised-warning-flags
                 -Wunused-foralls
