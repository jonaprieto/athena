@article{Fleury2014,
abstract = {Sledgehammer is a powerful interface from Isabelle to automated provers, to discharge subgoals that appear during the interactive proofs. It chooses facts related to this goal and asks some automatic provers to find a proof. The proof can be either reconstructed or just used to extract the relevant lemmas: in both cases the proof is not trusted. We extend the support by adding one first-order prover (Zipperposition), the reconstruction for two higher-order ATPs (Leo-II and Satallax) and an SMT solver veriT. The support of higher-order prover should especially improve Sledgehammer's performance for higher-order goals. Acknowledgement I would like to thank Jasmin Blanchette for the internship about a very interesting subject, and the members of the logic and verification chair for the welcome. Then Simon Cruanes and Pascal Fontaine (developer of Zipperposition and veriT) were very helpful and provided many explanations concerning their provers and bug fixes.},
author = {Fleury, Mathias {\&} and Blanchette, Jasmin},
file = {:Users/jonaprieto/Mendeley/Fleury, Blanchette - 2014 - Translation of Proofs Provided by External Provers More Automatic Prover Support for Isabelle Two Higher-Ord.pdf:pdf},
keywords = {Isabelle,Leo-II,Satallax,Sledgehammer,TSTP proof,Zipperposition,higher-order proofs,proof reconstruc-tion,veriT},
pages = {2--0},
title = {{Translation of Proofs Provided by External Provers More Automatic Prover Support for Isabelle: Two Higher-Order Provers and a SMT Solver}},
url = {http://perso.eleves.ens-rennes.fr/{~}mfleur01/documents/Fleury{\_}internship2014.pdf},
year = {2014}
}
@article{Blanchette2016,
author = {Blanchette, Jasmin Christian and B{\"{o}}hme, Sascha and Fleury, Mathias and Smolka, Steffen Juilf and Steckermeier, Albert},
doi = {10.1007/s10817-015-9335-3},
file = {:Users/jonaprieto/Mendeley/Blanchette et al. - 2016 - Semi-intelligible Isar Proofs from Machine-Generated Proofs.pdf:pdf},
issn = {15730670},
journal = {Journal of Automated Reasoning},
keywords = {Automatic theorem provers,Natural deduction,Proof assistants},
number = {2},
pages = {155--200},
publisher = {Journal of Automated Reasoning},
title = {{Semi-intelligible Isar Proofs from Machine-Generated Proofs}},
url = {http://dx.doi.org/10.1007/s10817-015-9335-3},
volume = {56},
year = {2016}
}
@inproceedings{Farber2015,
abstract = {Metis is an automated theorem prover based on ordered paramodulation. It is widely employed in the interactive theorem provers Isabelle/HOL and HOL4 to automate proofs as well as reconstruct proofs found by automated provers. For both these purposes, the tableaux-based MESON tactic is frequently used in HOL Light. However, paramodulation-based provers such as Metis perform better on many problems involving equality. We created a Metis-based tactic in HOL Light which translates HOL problems to Metis, runs an OCaml version of Metis, and reconstructs proofs in Metis' paramodulation calculus as HOL proofs. We evaluate the performance of Metis as proof reconstruction method in HOL Light. 1},
author = {F{\"{a}}rber, Michael and Kaliszyk, Cezary},
booktitle = {GCAI 2015. Global Conference on Artificial Intelligence Metis-based},
file = {:Users/jonaprieto/Mendeley/F{\"{a}}rber, Kaliszyk - 2015 - Metis-based Paramodulation Tactic for HOL Light.pdf:pdf},
pages = {127--136},
title = {{Metis-based Paramodulation Tactic for HOL Light}},
volume = {36},
year = {2015}
}
@inproceedings{Bohme2011,
abstract = {Automatic provers that can produce proof certificates do not need to be trusted. The certificate can be checked by an independent tool, for example an LCF-style proof assistant such as IsabelleHOL or HOL. Currently, the design of proof formats is mostly dictated by internal constraints of automatic provers and less guided by applications such as checking of certificates. In the worst case, checking can be as involved as the actual proof search simply because important information is missing in the proof certificate. To address this and other issues, we describe design choices for proof formats that we consider both feasible for implementors of automatic provers as well as effective to simplify checking of certificates.},
author = {B{\"{o}}hme, Sascha and Weber, Tjark},
booktitle = {First International Workshop on Proof eXchange for Theorem Proving - PxTP 2011},
file = {:Users/jonaprieto/Mendeley/B{\"{o}}hme, Weber - 2011 - Designing Proof Formats A User's Perspective - Experience Report.pdf:pdf;:Users/jonaprieto/Mendeley/B{\"{o}}hme, Weber - 2011 - Designing Proof Formats A User's Perspective - Experience Report(2).pdf:pdf},
title = {{Designing Proof Formats: A User's Perspective - Experience Report}},
url = {http://hal.inria.fr/hal-00677244},
year = {2011}
}
@article{Altenkirch2015,
author = {Altenkirch, Leran Cai and Thorsten},
file = {:Users/jonaprieto/Mendeley/Altenkirch - 2015 - Formalising the completeness theorem of classical propositional logic in Agda.pdf:pdf},
title = {{Formalising the completeness theorem of classical propositional logic in Agda}},
url = {https://akaposi.github.io/proplogic.pdf},
year = {2015}
}
@inproceedings{DeMoura2008,
abstract = {Satisfiability Modulo Theories (SMT) problem is a decision problem for logical first order formulas with respect to combinations of background theories such as: arithmetic, bit-vectors, arrays, and uninterpreted functions. Z3 is a new and efficient SMT Solver freely available from Microsoft Research. It is used in various software verification and analysis applications.},
author = {{De Moura}, Leonardo and Bj{\o}rner, Nikolaj},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-540-78800-3_24},
isbn = {3540787992},
issn = {03029743},
pages = {337--340},
title = {{Z3: An efficient SMT Solver}},
volume = {4963 LNCS},
year = {2008}
}
@article{kanso2016light,
author = {Kanso, Karim and Setzer, Anton},
doi = {10.1017/S0960129514000140},
file = {:Users/jonaprieto/Mendeley/Kanso, Setzer - 2016 - A Light-weight Integration Of Automated And Interactive Theorem Proving.pdf:pdf},
issn = {09601295},
journal = {Mathematical Structures in Computer Science},
number = {1},
pages = {129--153},
publisher = {Cambridge University Press},
title = {{A Light-weight Integration Of Automated And Interactive Theorem Proving}},
volume = {26},
year = {2016}
}
@inproceedings{Weber2006,
abstract = {This paper describes the integration of a leading SAT solver with Isabelle/HOL, a popular interactive theorem prover. The SAT solver generates resolution-style proofs for (instances of) propositional tautologies. These proofs are verified by the theorem prover. The presented approach significantly improves Isabelle's performance on propositional problems, and furthermore exhibits counterexamples for unprovable conjectures. ?? 2005 Elsevier B.V. All rights reserved.},
author = {Weber, Tjark},
booktitle = {Electronic Notes in Theoretical Computer Science},
doi = {10.1016/j.entcs.2005.12.007},
file = {:Users/jonaprieto/Mendeley/Weber - 2006 - Integrating a SAT solver with an LCF-style theorem prover.pdf:pdf},
issn = {15710661},
keywords = {LCF-style theorem prover,Proof checking,Propositional resolution,SAT solver},
number = {2 SPEC. ISS.},
pages = {67--78},
title = {{Integrating a SAT solver with an LCF-style theorem prover}},
volume = {144},
year = {2006}
}
@article{Fontaine2006,
abstract = {Formal system development needs expressive specification languages, but also calls for highly automated tools. These two goals are not easy to reconcile, especially if one also aims at high assurances for correctness. In this paper, we describe a combination of {\{}Isabelle/HOL{\}} with a proof-producing {\{}SMT{\}} (Satisfiability Modulo Theories) solver that contains a {\{}SAT{\}} engine and a decision procedure for quantifier-free first-order logic with equality. As a result, a user benefits from the expressiveness of {\{}Isabelle/HOL{\}} when modeling a system, but obtains much better automation for those fragments of the proofs that fall within the scope of the (automatic) {\{}SMT{\}} solver. Soundness is not compromised because all proofs are submitted to the trusted kernel of Isabelle for certification. This architecture is straightforward to extend for other interactive proof assistants and proof-producing reasoners.},
author = {Fontaine, Pascal and Marion, Jean Yves and Merz, Stephan and Nieto, Leonor Prensa and Tiu, Alwen},
doi = {10.1007/11691372_11},
file = {:Users/jonaprieto/Mendeley/Fontaine et al. - 2006 - Expressiveness automation soundness Towards combining SMT solvers and interactive proof assistants.pdf:pdf},
isbn = {3540330569},
issn = {03029743},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
pages = {167--181},
title = {{Expressiveness + automation + soundness: Towards combining SMT solvers and interactive proof assistants}},
volume = {3920 LNCS},
year = {2006}
}
@incollection{Riazanov1999,
abstract = {Vampire is a resolution-based theorem prover for rst-order classical logic. The current version implements ordered binary resolution with the set-of-support strategy and ordered hyperresolution. The competition version will have equality rules.},
address = {Berlin, Heidelberg},
author = {Riazanov, Alexandre and Voronkov, Andrei},
booktitle = {Automated Deduction --- CADE-16: 16th International Conference on Automated Deduction Trento, Italy, July 7--10, 1999 Proceedings},
doi = {10.1007/3-540-48660-7_26},
isbn = {978-3-540-48660-2},
pages = {292--296},
publisher = {Springer Berlin Heidelberg},
title = {{Vampire}},
url = {https://doi.org/10.1007/3-540-48660-7{\_}26 https://doi.org/10.1007/3-540-48660-7{\%}7B{\_}{\%}7D26},
year = {1999}
}
@article{Benzm2006,
author = {Benzm, Christoph and Fischer, Bernd and Sutcli, Geo and Conference, International},
file = {:Users/jonaprieto/Mendeley/Benzm et al. - 2006 - 6th International Workshop on the Implementation of Logics.pdf:pdf},
journal = {Aerospace},
number = {November},
title = {{6th International Workshop on the Implementation of Logics}},
year = {2006}
}
@article{Farber2016,
abstract = {Copyright ? by the paper's authors.Proof assistants based on higher-order logic frequently use first-order automated theorem provers as proof search mechanisms. The reconstruction of the proofs generated by common tools, such as MESON and Metis, typically involves the use of the axiom of choice to simulate the Skolemisation steps. In this paper we present a method to reconstruct the proofs without introducing Skolem functions. This enables us to integrate tactics that use first-order automated theorem provers in logics that feature neither the axiom of choice nor the definite description operator.},
author = {F{\"{a}}rber, Michael and Kaliszyk, Cezary},
file = {:Users/jonaprieto/Mendeley/F{\"{a}}rber, Kaliszyk - 2016 - No choice Reconstruction of first-order ATP proofs without skolem functions.pdf:pdf},
issn = {16130073},
journal = {CEUR Workshop Proceedings},
number = {Paar},
pages = {24--31},
title = {{No choice: Reconstruction of first-order ATP proofs without skolem functions}},
volume = {1635},
year = {2016}
}
@article{bezem2002automated,
author = {Bezem, Marc and Hendriks, Dimitri and {De Nivelle}, Hans},
journal = {Journal of Automated Reasoning},
number = {3},
pages = {253--275},
publisher = {Springer},
title = {{Automated Proof Construction in Type Theory Using Resolution}},
volume = {29},
year = {2002}
}
@article{hurd2003first,
author = {Hurd, Joe},
file = {:Users/jonaprieto/Mendeley/Hurd - 2003 - First-order Proof Tactics In Higher-order Logic Theorem Provers.pdf:pdf},
journal = {Design and Application of Strategies/Tactics in Higher Order Logics, number NASA/CP-2003-212448 in NASA Technical Reports},
pages = {56--68},
title = {{First-order Proof Tactics In Higher-order Logic Theorem Provers}},
year = {2003}
}
@inproceedings{paulson2010three,
author = {Paulson, Lawrence C and Blanchette, Jasmin Christian},
booktitle = {PAAR@ IJCAR},
pages = {1--10},
title = {{Three Years Of Experience with Sledgehammer, A Practical Link Between Automatic And Interactive Theorem Provers.}},
year = {2010}
}
@incollection{Barrett2011,
abstract = {CVC4 is the latest version of the Cooperating Validity Checker. A joint project of NYU and U Iowa, CVC4 aims to support the useful feature set of CVC3 and SMT-LIBv2 while optimizing the design of the core system architecture and decision procedures to take advantage of recent engineering and algorithmic advances. CVC4 represents a completely new code base; it is a from-scratch rewrite of CVC3, and many subsystems have been completely redesigned. Additional decision procedures for CVC4 are currently under development, but for what it currently achieves, it is a lighter-weight and higher-performing tool than CVC3. We describe the system architecture, subsystems of note, and discuss some applications and continuing work.},
address = {Berlin, Heidelberg},
author = {Barrett, Clark and Conway, Christopher L and Deters, Morgan and Hadarean, Liana and Jovanovi{\'{c}}, Dejan and King, Tim and Reynolds, Andrew and Tinelli, Cesare},
booktitle = {Computer Aided Verification: 23rd International Conference, CAV 2011, Snowbird, UT, USA, July 14-20, 2011. Proceedings},
doi = {10.1007/978-3-642-22110-1_14},
editor = {Gopalakrishnan, Ganesh and Qadeer, Shaz},
isbn = {978-3-642-22110-1},
pages = {171--177},
publisher = {Springer Berlin Heidelberg},
title = {{CVC4}},
year = {2011}
}
@inproceedings{paulson2007source,
author = {Paulson, Lawrence C and Susanto, Kong Woei},
booktitle = {TPHOLs},
file = {:Users/jonaprieto/Mendeley/Paulson, Susanto - 2007 - Source-level Proof Reconstruction For Interactive Theorem Proving.pdf:pdf},
organization = {Springer},
pages = {232--245},
title = {{Source-level Proof Reconstruction For Interactive Theorem Proving}},
volume = {4732},
year = {2007}
}
@misc{denivelle2003,
author = {{De Nivelle}, Hans},
title = {{Bliksem 1.10 User Manual}},
url = {http://www.ii.uni.wroc.pl/{~}nivelle/software/bliksem.}
}
@incollection{armand2011,
abstract = {We present a way to enjoy the power of SAT and SMT provers in Coq without compromising soundness. This requires these provers to return not only a yes/no answer, but also a proof witness that can be independently rechecked. We present such a checker, written and fully certified in Coq. It is conceived in a modular way, in order to tame the proofs' complexity and to be extendable. It can currently check witnesses from the SAT solver ZChaff and from the SMT solver veriT. Experiments highlight the efficiency of this checker. On top of it, new reflexive Coq tactics have been built that can decide a subset of Coq's logic by calling external provers and carefully checking their answers.},
address = {Berlin, Heidelberg},
author = {Armand, Michael and Faure, Germain and Gr{\'{e}}goire, Benjamin and Keller, Chantal and Th{\'{e}}ry, Laurent and Werner, Benjamin},
booktitle = {Certified Programs and Proofs: First International Conference, CPP 2011, Kenting, Taiwan, December 7-9, 2011. Proceedings},
doi = {10.1007/978-3-642-25379-9_12},
isbn = {978-3-642-25379-9},
pages = {135--150},
publisher = {Springer Berlin Heidelberg},
title = {{A Modular Integration of SAT/SMT Solvers to Coq through Proof Witnesses}},
url = {https://doi.org/10.1007/978-3-642-25379-9{\_}12},
year = {2011}
}
@incollection{bouton2009,
abstract = {This article describes the first public version of the satisfiability modulo theory (SMT) solver veriT. It is open-source, proof-producing, and complete for quantifier-free formulas with uninterpreted functions and difference logic on real numbers and integers.},
address = {Berlin, Heidelberg},
author = {Bouton, Thomas and de Oliveira, Diego and D{\'{e}}harbe, David and Fontaine, Pascal},
booktitle = {Automated Deduction -- CADE-22: 22nd International Conference on Automated Deduction, Montreal, Canada, August 2-7, 2009. Proceedings},
doi = {10.1007/978-3-642-02959-2_12},
isbn = {978-3-642-02959-2},
pages = {151--156},
publisher = {Springer Berlin Heidelberg},
title = {{veriT: An Open, Trustable and Efficient SMT-Solver}},
year = {2009}
}
@book{humberstone2011,
author = {Humberstone, L},
publisher = {MIT Press},
title = {{The Connectives}},
year = {2011}
}
@book{paulson1994isabelle,
author = {Paulson, Lawrence C},
publisher = {Springer Science {\&} Business Media},
title = {{Isabelle: A Generic Theorem Prover}},
volume = {828},
year = {1994}
}
@article{appel1959,
author = {Appel, K I},
issn = {00224812},
journal = {The Journal of Symbolic Logic},
number = {4},
pages = {306--310},
publisher = {Association for Symbolic Logic},
title = {{Horn Sentences in Identity Theory}},
url = {http://www.jstor.org/stable/2963901},
volume = {24},
year = {1959}
}
@article{meng2006automation,
author = {Meng, Jia and Quigley, Claire and Paulson, Lawrence C},
journal = {Information and computation},
number = {10},
pages = {1575--1596},
publisher = {Elsevier},
title = {{Automation for Interactive Proof: First Prototype}},
volume = {204},
year = {2006}
}
@book{nipkow2002isabelle,
author = {Nipkow, Tobias and Paulson, Lawrence C and Wenzel, Markus},
publisher = {Springer Science {\&} Business Media},
title = {{Isabelle/HOL: A Proof Assistant for Higher-order Logic}},
volume = {2283},
year = {2002}
}
@article{sutcliffe2009,
abstract = {This paper describes the First-Order Form (FOF) and Clause Normal Form (CNF) parts of the TPTP problem library, and the associated infrastructure. TPTP v3.5.0 was the last release containing only FOF and CNF problems, and thus serves as the exemplar. This paper summarizes the history and development of the TPTP, describes the structure and contents of the TPTP, and gives an overview of TPTP related projects and tools.},
author = {Sutcliffe, Geoff},
doi = {10.1007/s10817-009-9143-8},
issn = {1573-0670},
journal = {Journal of Automated Reasoning},
month = {jul},
number = {4},
pages = {337},
title = {{The TPTP Problem Library and Associated Infrastructure}},
url = {https://doi.org/10.1007/s10817-009-9143-8},
volume = {43},
year = {2009}
}
@incollection{kaliszyk2013,
abstract = {PRocH is a proof reconstruction tool that imports in HOL Light proofs produced by ATPs on the recently developed translation of HOL Light and Flyspeck problems to ATP formats. PRocH combines several reconstruction methods in parallel, but the core improvement over previous methods is obtained by re-playing in the HOL logic the detailed inference steps recorded in the ATP (TPTP) proofs, using several internal HOL Light inference methods. These methods range from fast variable matching and more involved rewriting, to full first-order theorem proving using the MESON tactic. The system is described and its performance is evaluated here on a large set of Flyspeck problems.},
address = {Berlin, Heidelberg},
author = {Kaliszyk, Cezary and Urban, Josef},
booktitle = {Automated Deduction -- CADE-24: 24th International Conference on Automated Deduction, Lake Placid, NY, USA, June 9-14, 2013. Proceedings},
doi = {10.1007/978-3-642-38574-2_18},
editor = {Bonacina, Maria Paola},
file = {:Users/jonaprieto/Mendeley/Kaliszyk, Urban - 2013 - PRocH Proof Reconstruction for HOL Light.pdf:pdf},
isbn = {978-3-642-38574-2},
pages = {267--274},
publisher = {Springer Berlin Heidelberg},
title = {{PRocH: Proof Reconstruction for HOL Light}},
url = {https://doi.org/10.1007/978-3-642-38574-2{\_}18},
year = {2013}
}
@incollection{sultana2015,
abstract = {Implementing proof reconstruction is difficult because it involves symbolic manipulations of formal objects whose representation varies between different systems. It requires significant knowledge of the source and target systems. One cannot simply re-target to another logic. We present a modular proof reconstruction system with separate components, specifying their behaviour and describing how they interact. This system is demonstrated and evaluated through an implementation to reconstruct proofs generated by Leo-II and Satallax in Isabelle HOL, and is shown to work better than the current method of rediscovering proofs using a select set of provers.},
address = {Cham},
author = {Sultana, Nik and Benzm{\"{u}}ller, Christoph and Paulson, Lawrence C},
booktitle = {Frontiers of Combining Systems: 10th International Symposium, FroCoS 2015, Wroclaw, Poland, September 21-24, 2015, Proceedings},
doi = {10.1007/978-3-319-24246-0_16},
editor = {Lutz, Carsten and Ranise, Silvio},
file = {:Users/jonaprieto/Mendeley/Sultana, Benzm{\"{u}}ller, Paulson - 2015 - Proofs and Reconstructions.pdf:pdf},
isbn = {978-3-319-24246-0},
pages = {256--271},
publisher = {Springer International Publishing},
title = {{Proofs and Reconstructions}},
url = {https://doi.org/10.1007/978-3-319-24246-0{\_}16},
year = {2015}
}
@inproceedings{hurlin07practical,
address = {Bremen, Germany},
author = {Hurlin, Cl{\'{e}}ment and Chaieb, Amine and Fontaine, Pascal and Merz, Stephan and Weber, Tjark},
booktitle = {Proceedings of the Isabelle Workshop 2007},
editor = {Dixon, Lucas and Johansson, Moa},
file = {:Users/jonaprieto/Mendeley/Hurlin et al. - 2007 - Practical Proof Reconstruction for First-Order Logic and Set-Theoretical Constructions.pdf:pdf},
pages = {2--13},
title = {{Practical Proof Reconstruction for First-Order Logic and Set-Theoretical Constructions}},
year = {2007}
}
@incollection{foster2011integrating,
abstract = {Agda is a dependently typed functional programming language and a proof assistant in which developing programs and proving their correctness is one activity. We show how this process can be enhanced by integrating external automated theorem provers, provide a prototypical integration of the equational theorem prover Waldmeister, and give examples of how this proof automation works in practice.},
address = {Berlin, Heidelberg},
author = {Foster, Simon and Struth, Georg},
booktitle = {NASA Formal Methods: Third International Symposium, NFM 2011, Pasadena, CA, USA, April 18-20, 2011. Proceedings},
doi = {10.1007/978-3-642-20398-5_10},
file = {:Users/jonaprieto/Mendeley/Foster, Struth - 2011 - Integrating an Automated Theorem Prover into Agda.pdf:pdf},
isbn = {978-3-642-20398-5},
pages = {116--130},
publisher = {Springer Berlin Heidelberg},
title = {{Integrating an Automated Theorem Prover into Agda}},
year = {2011}
}
@article{blanchette2013extending,
abstract = {Sledgehammer is a component of Isabelle/HOL that employs resolution-based first-order automatic theorem provers (ATPs) to discharge goals arising in interactive proofs. It heuristically selects relevant facts and, if an ATP is successful, produces a snippet that replays the proof in Isabelle. We extended Sledgehammer to invoke satisfiability modulo theories (SMT) solvers as well, exploiting its relevance filter and parallel architecture. The ATPs and SMT solvers nicely complement each other, and Isabelle users are now pleasantly surprised by SMT proofs for problems beyond the ATPs' reach.},
author = {Blanchette, Jasmin Christian and B{\"{o}}hme, Sascha and Paulson, Lawrence C},
doi = {10.1007/s10817-013-9278-5},
file = {:Users/jonaprieto/Mendeley/Blanchette, B{\"{o}}hme, Paulson - 2013 - Extending Sledgehammer with SMT Solvers(2).pdf:pdf},
issn = {1573-0670},
journal = {Journal of Automated Reasoning},
month = {jun},
number = {1},
pages = {109--128},
title = {{Extending Sledgehammer with SMT Solvers}},
url = {https://doi.org/10.1007/s10817-013-9278-5},
volume = {51},
year = {2013}
}
@incollection{bohme2010,
abstract = {The Satisfiability Modulo Theories (SMT) solver Z3 can generate proofs of unsatisfiability. We present independent reconstruction of these proofs in the theorem provers Isabelle/HOL and HOL4 with particular focus on efficiency. Our highly optimized implementations outperform previous LCF-style proof checkers for SMT, often by orders of magnitude. Detailed performance data shows that LCF-style proof reconstruction can be faster than proof search in Z3.},
address = {Berlin, Heidelberg},
author = {B{\"{o}}hme, Sascha and Weber, Tjark},
booktitle = {Interactive Theorem Proving: First International Conference, ITP 2010, Edinburgh, UK, July 11-14, 2010. Proceedings},
doi = {10.1007/978-3-642-14052-5_14},
editor = {Kaufmann, Matt and Paulson, Lawrence C},
file = {:Users/jonaprieto/Mendeley/B{\"{o}}hme, Weber - 2010 - Fast LCF-Style Proof Reconstruction for Z3.pdf:pdf;:Users/jonaprieto/Mendeley/B{\"{o}}hme, Weber - 2010 - Fast LCF-Style Proof Reconstruction for Z3(2).pdf:pdf},
isbn = {978-3-642-14052-5},
pages = {179--194},
publisher = {Springer Berlin Heidelberg},
title = {{Fast LCF-Style Proof Reconstruction for Z3}},
year = {2010}
}
@misc{norrish2007hol,
author = {Norrish, Michael and Slind, Konrad},
title = {{The HOL system description}},
year = {2007}
}
@misc{agdateam,
author = {Team, The Agda Developement},
edition = {Version 8.},
title = {{Agda 2.4.2.3}},
url = {http://wiki.portal.chalmers.se/agda/pmwiki.php},
year = {2015}
}
@article{Schulz:AICOM-2002,
annote = {StS},
author = {Schulz, S},
journal = {Journal of AI Communications},
number = {2/3},
pages = {111--126},
title = {{E -- A Brainiac Theorem Prover}},
volume = {15},
year = {2002}
}
@article{sutcliffe2004tstp,
author = {Sutcliffe, Geoff and Zimmer, J{\"{u}}rgen and Schulz, Stephan},
journal = {Distributed Constraint Problem Solving and Reasoning in Multi-Agent Systems},
pages = {201--215},
title = {{TSTP data-exchange formats for automated theorem proving tools}},
volume = {112},
year = {2004}
}
@misc{coqteam,
author = {Team, The Coq Developement},
edition = {Version 8.},
title = {{The Coq Proof Assistant. Reference Manual}},
year = {2015}
}
@inproceedings{Sut07-CSR,
author = {Sutcliffe, G},
booktitle = {Proceedings of the 2nd International Computer Science Symposium in Russia},
editor = {Diekert, V and Volkov, M and Voronkov, A},
number = {4649},
pages = {7--23},
publisher = {Springer-Verlag},
series = {Lecture Notes in Computer Science},
title = {{TPTP, TSTP, CASC, etc.}},
year = {2007}
}
@article{hillenbrand1997,
abstract = {Waldmeister is a high-performance theorem prover for unit equational first-order logic. In the making of Waldmeister, we have applied an engineering approach, identifying the critical points with respect to efficiency in time and space. Our logical three-level system model consists of the basic operations on the lowest level, where we put great stress on efficient data structures and algorithms. For the middle level, where the inference steps are aggregated into an inference machine, flexible adjustment has proven essential during experimental evaluation. The top level holds control strategy and reduction ordering. Although at this level only standard strategies are employed, really large proof tasks have been managed in reasonable time.},
author = {Hillenbrand, Thomas and Buch, Arnim and Vogt, Roland and L{\"{o}}chner, Bernd},
doi = {10.1023/A:1005872405899},
issn = {1573-0670},
journal = {Journal of Automated Reasoning},
number = {2},
pages = {265--270},
title = {{WALDMEISTER - High-Performance Equational Deduction}},
url = {https://doi.org/10.1023/A:1005872405899},
volume = {18},
year = {1997}
}
@article{Weber2009,
abstract = {This paper describes the integration of zChaff and MiniSat, currently two leading SAT solvers, with Higher Order Logic (HOL) theorem provers. Both SAT solvers generate resolution-style proofs for (instances of) propositional tautologies. These proofs are verified by the theorem provers. The presented approach significantly improves the provers' performance on propositional problems, and exhibits counterexamples for unprovable conjectures. It is also shown that LCF-style theorem provers can serve as viable proof checkers even for large SAT problems. An efficient representation of the propositional problem in the theorem prover turns out to be crucial; several possible solutions are discussed. ?? 2007 Elsevier Inc. All rights reserved.},
author = {Weber, Tjark and Amjad, Hasan},
doi = {10.1016/j.jal.2007.07.003},
file = {:Users/jonaprieto/Mendeley/Weber, Amjad - 2009 - Efficiently checking propositional refutations in HOL theorem provers.pdf:pdf},
issn = {15708683},
journal = {Journal of Applied Logic},
keywords = {Interactive theorem proving,LCF-style proof checking,Propositional resolution},
number = {1},
pages = {26--40},
title = {{Efficiently checking propositional refutations in HOL theorem provers}},
volume = {7},
year = {2009}
}
@incollection{Hurd1999,
author = {Hurd, Joe},
doi = {10.1007/3-540-48256-3_21},
file = {:Users/jonaprieto/Mendeley/Hurd - 1999 - Integrating Gandalf and HOL.pdf:pdf},
pages = {311--321},
publisher = {Springer, Berlin, Heidelberg},
title = {{Integrating Gandalf and HOL}},
url = {http://link.springer.com/10.1007/3-540-48256-3{\_}21},
year = {1999}
}
@inproceedings{Weidenbach2009,
abstract = {SPASS is an automated theorem prover for full first-order logic with equality and a number of non-classical logics. This system description provides an overview of our recent developments in SPASS 3.5 including subterm contextual rewriting, improved split backtracking, a significantly faster FLOTTER implementation with additional control flags, completely symmetric implementation of forward and backward redundancy criteria, faster parsing with improved support for big files, faster and extended sort module, and support for include commands in input files. Finally, SPASS 3.5 can now parse files in TPTP syntax, comes with a new converter tptp2dfg and is distributed under a BSD style license.},
author = {Weidenbach, Christoph and Dimova, Dilyana and Fietzke, Arnaud and Kumar, Rohit and Suda, Martin and Wischnewski, Patrick},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-642-02959-2_10},
isbn = {3642029582},
issn = {03029743},
pages = {140--145},
title = {{SPASS version 3.5}},
volume = {5663 LNAI},
year = {2009}
}
